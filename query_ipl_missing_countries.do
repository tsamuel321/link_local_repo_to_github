
	
*********************************************************************************************************************************************************************************

** Purpose  : Compute an equivalent IPL in 2017 PPPs that retains 2005, 2015 global poverty rate in 2011 PPPs
** Input 1	: The Stata code below was largely created by R.Andres Castaneda and Christoph Lakner (References: https://github.com/worldbank/povcalnet)
** Input 2  : PPP data set, filename(ppp.dta)
** Input 3	: CPI data set, filename(cpi.dta)
** Input 4	: Jolliffe & Prydz (2016) --> https://link.springer.com/article/10.1007/s10888-016-9327-5
** Input 5  : Jolliffe & Prydz (2016), Appendix 2 of Policy Research Working Paper, No. 7606 --> http://documents.worldbank.org/curated/en/837051468184454513/pdf/WPS7606.pdf
** Date     : May 21, 2020
** Author(s): Samuel Kofi Tetteh Baah & Daniel Mahler 

*********************************************************************************************************************************************************************************
	


clear all
set more off

global UPI=c(username) 

if "$UPI"=="WB537472" {
global dir "C:\Users\wb537472\OneDrive - WBG\Documents\Samuel_ETC_Research\paper\analysis_ext"
}

else {
global dir "C:\Users\\${UPI}\OneDrive - WBG\Documents\Samuel_ETC_Research\paper\analysis_ext"
}

cd "$dir"
*mkdir "${dir}/data/equ_ipl_poverty_query"


*Generate possible equivalent international poverty lines
set obs 350
gen double obs = _n 
gen double obs_ = _n * 0.002
gen double equ_ipl = 1.75 + obs_


save `"${dir}/data/equ_ipl_query.dta"', replace

count

forvalues row=1/`r(N)' {

use `"${dir}/data/equ_ipl_query.dta"', clear

local ipl = equ_ipl[`row']
local n = obs[`row']
 
 global data_equ "${dir}/data/equ_ipl_poverty_query/`ipl'"
 

use `"${data_equ}/ipl2017_poverty_query_new.dta"', clear

gen count = _N
gen equ_ipl = `ipl'
keep countrycode count equ_ipl

merge m:1 countrycode using `"${dir}/data/economies.dta"'
tab countrycode if _merge==2& inPovcalNet_country=="Yes"

egen count_ = mean(count)
egen equ_ipl_ = mean(equ_ipl)
keep if _merge==2& inPovcalNet_country=="Yes"
drop _merge count equ_ipl
rename count_ count
rename equ_ipl_ equ_ipl
keep countrycode count equ_ipl

gen n = `n' 

save `"${data_equ}/query_missing_countries.dta"', replace
}

global data "${dir}/data/equ_ipl_poverty_query"
use `"${data}/1.752/query_missing_countries.dta"', clear

 foreach num in 1.754 1.756 1.758 1.76 1.762 1.764 1.766 1.768 1.77 1.772 1.774 1.776 1.778 1.78 1.782 1.784 1.786 1.788 1.79 1.792 1.794 1.796 1.798 1.8 1.802 1.804 1.806 1.808 1.81 1.812 1.814 1.816 1.818 1.82 1.822 1.824 1.826 1.828 1.83 1.832 1.834 1.836 1.838 1.84 1.842 1.844 1.846 1.848 1.85 1.852 1.854 1.856 1.858 1.86 1.862 1.864 1.866 1.868 1.87 1.872 1.874 1.876 1.878 1.88 1.882 1.884 1.886 1.888 1.89 1.892 1.894 1.896 1.898 1.9 1.902 1.904 1.906 1.908 1.91 1.912 1.914 1.916 1.918 1.92 1.922 1.924 1.926 1.928 1.93 1.932 1.934 1.936 1.938 1.94 1.942 1.944 1.946 1.948 1.95 1.952 1.954 1.956 1.958 1.96 1.962 1.964 1.966 1.968 1.97 1.972 1.974 1.976 1.978 1.98 1.982 1.984 1.986 1.988 1.99 1.992 1.994 1.996 1.998 2 2.002 2.004 2.006 2.008 2.01 2.012 2.014 2.016 2.018 2.02 2.022 2.024 2.026 2.028 2.03 2.032 2.034 2.036 2.038 2.04 2.042 2.044 2.046 2.048 2.05 2.052 2.054 2.056 2.058 2.06 2.062 2.064 2.066 2.068 2.07 2.072 2.074 2.076 2.078 2.08 2.082 2.084 2.086 2.088 2.09 2.092 2.094 2.096 2.098 2.1 2.102 2.104 2.106 2.108 2.11 2.112 2.114 2.116 2.118 2.12 2.122 2.124 2.126 2.128 2.13 2.132 2.134 2.136 2.138 2.14 2.142 2.144 2.146 2.148 2.15 2.152 2.154 2.156 2.158 2.16 2.162 2.164 2.166 2.168 2.17 2.172 2.174 2.176 2.178 2.18 2.182 2.184 2.186 2.188 2.19 2.192 2.194 2.196 2.198 2.2 2.202 2.204 2.206 2.208 2.21 2.212 2.214 2.216 2.218 2.22 2.222 2.224 2.226 2.228 2.23 2.232 2.234 2.236 2.238 2.24 2.242 2.244 2.246 2.248 2.25 2.252 2.254 2.256 2.258 2.26 2.262 2.264 2.266 2.268 2.27 2.272 2.274 2.276 2.278 2.28 2.282 2.284 2.286 2.288 2.29 2.292 2.294 2.296 2.298 2.3 2.302 2.304 2.306 2.308 2.31 2.312 2.314 2.316 2.318 2.32 2.322 2.324 2.326 2.328 2.33 2.332 2.334 2.336 2.338 2.34 2.342 2.344 2.346 2.348 2.35 2.352 2.354 2.356 2.358 2.36 2.362 2.364 2.366 2.368 2.37 2.372 2.374 2.376 2.378 2.38 2.382 2.384 2.386 2.388 2.39 2.392 2.394 2.396 2.398 2.4 2.402 2.404 2.406 2.408 2.41 2.412 2.414 2.416 2.418 2.42 2.422 2.424 2.426 2.428 2.43 2.432 2.434 2.436 2.438 2.44 2.442 2.444 2.446 2.448 2.45 {
 
append using `"${data}/`num'/query_missing_countries"', force
	
}







1.752 1.754 1.756 1.758 1.76 1.762 1.764 1.766 1.768 1.77 1.772 1.774 1.776 1.778 1.78 1.782 1.784 1.786 1.788 1.79 1.792 1.794 1.796 1.798 1.8 1.802 1.804 1.806 1.808 1.81 1.812 1.814 1.816 1.818 1.82 1.822 1.824 1.826 1.828 1.83 1.832 1.834 1.836 1.838 1.84 1.842 1.844 1.846 1.848 1.85 1.852 1.854 1.856 1.858 1.86 1.862 1.864 1.866 1.868 1.87 1.872 1.874 1.876 1.878 1.88 1.882 1.884 1.886 1.888 1.89 1.892 1.894 1.896 1.898 1.9 1.902 1.904 1.906 1.908 1.91 1.912 1.914 1.916 1.918 1.92 1.922 1.924 1.926 1.928 1.93 1.932 1.934 1.936 1.938 1.94 1.942 1.944 1.946 1.948 1.95 1.952 1.954 1.956 1.958 1.96 1.962 1.964 1.966 1.968 1.97 1.972 1.974 1.976 1.978 1.98 1.982 1.984 1.986 1.988 1.99 1.992 1.994 1.996 1.998 2 2.002 2.004 2.006 2.008 2.01 2.012 2.014 2.016 2.018 2.02 2.022 2.024 2.026 2.028 2.03 2.032 2.034 2.036 2.038 2.04 2.042 2.044 2.046 2.048 2.05 2.052 2.054 2.056 2.058 2.06 2.062 2.064 2.066 2.068 2.07 2.072 2.074 2.076 2.078 2.08 2.082 2.084 2.086 2.088 2.09 2.092 2.094 2.096 2.098 2.1 2.102 2.104 2.106 2.108 2.11 2.112 2.114 2.116 2.118 2.12 2.122 2.124 2.126 2.128 2.13 2.132 2.134 2.136 2.138 2.14 2.142 2.144 2.146 2.148 2.15 2.152 2.154 2.156 2.158 2.16 2.162 2.164 2.166 2.168 2.17 2.172 2.174 2.176 2.178 2.18 2.182 2.184 2.186 2.188 2.19 2.192 2.194 2.196 2.198 2.2 2.202 2.204 2.206 2.208 2.21 2.212 2.214 2.216 2.218 2.22 2.222 2.224 2.226 2.228 2.23 2.232 2.234 2.236 2.238 2.24 2.242 2.244 2.246 2.248 2.25 2.252 2.254 2.256 2.258 2.26 2.262 2.264 2.266 2.268 2.27 2.272 2.274 2.276 2.278
2.28 2.282 2.284 2.286 2.288 2.29 2.292 2.294 2.296 2.298 2.3 2.302 2.304 2.306 2.308 2.31 2.312 2.314 2.316 2.318 2.32 2.322 2.324 2.326 2.328 2.33 2.332 2.334 2.336 2.338 2.34 2.342 2.344 2.346 2.348 2.35 2.352 2.354 2.356 2.358 2.36 2.362 2.364 2.366
2.368 2.37 2.372 2.374 2.376 2.378 2.38 2.382 2.384 2.386 2.388 2.39 2.392 2.394 2.396 2.398 2.4 2.402 2.404 2.406 2.408 2.41 2.412 2.414 2.416 2.418 2.42 2.422 2.424 2.426 2.428 2.43 2.432 2.434 2.436 2.438 2.44 2.442 2.444 2.446 2.448 2.45 
